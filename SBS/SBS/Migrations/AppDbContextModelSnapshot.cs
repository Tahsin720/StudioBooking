// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SBS.Domain.Database;

#nullable disable

namespace SBS.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SBS.Domain.Entities.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudioId")
                        .HasColumnType("int");

                    b.Property<string>("TimeSlot")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StudioId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.doe@email.com",
                            StudioId = 1,
                            TimeSlot = "10:00-12:00",
                            UserName = "John Doe"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2025, 7, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane.smith@email.com",
                            StudioId = 2,
                            TimeSlot = "14:00-16:00",
                            UserName = "Jane Smith"
                        });
                });

            modelBuilder.Entity("SBS.Domain.Entities.Studio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amenities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerHour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RadiusKm")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("studios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amenities = "Microphones, Soundproofing",
                            Area = "Central",
                            Latitude = 40.7128m,
                            Location = "Downtown, City A",
                            Longitude = -74.0060m,
                            Name = "Studio A",
                            PricePerHour = 50.00m,
                            RadiusKm = 10,
                            Rating = 4.5m,
                            Type = "Recording"
                        },
                        new
                        {
                            Id = 2,
                            Amenities = "Lighting, Backdrops",
                            Area = "Western",
                            Latitude = 34.0522m,
                            Location = "Westside, City B",
                            Longitude = -118.2437m,
                            Name = "Studio B",
                            PricePerHour = 30.00m,
                            RadiusKm = 15,
                            Rating = 4.0m,
                            Type = "Photography"
                        },
                        new
                        {
                            Id = 3,
                            Amenities = "Cameras, Green Screen",
                            Area = "Eastern",
                            Latitude = 41.8781m,
                            Location = "Eastside, City A",
                            Longitude = -87.6298m,
                            Name = "Studio C",
                            PricePerHour = 70.00m,
                            RadiusKm = 20,
                            Rating = 4.8m,
                            Type = "Video"
                        });
                });

            modelBuilder.Entity("SBS.Domain.Entities.Booking", b =>
                {
                    b.HasOne("SBS.Domain.Entities.Studio", "Studios")
                        .WithMany()
                        .HasForeignKey("StudioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Studios");
                });
#pragma warning restore 612, 618
        }
    }
}
